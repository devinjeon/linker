{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["SignButton","props","hasSession","href","axios","defaults","baseURL","LinkFrom","state","id","url","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","onCreate","then","response","status","catch","error","console","log","onSubmit","this","placeholder","onChange","type","Component","App","useCookies","cookies","className","src","logo","alt","data","post","withCredentials","undefined","session","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,MAA0B,iC,gCC8BzC,SAASA,EAAWC,GAElB,OADmBA,EAAMC,WAIhB,mBAAGC,KAAI,UAAKC,IAAMC,SAASC,QAApB,gBAAP,sCAFA,mBAAGH,KAAI,UAAKC,IAAMC,SAASC,QAApB,gBAAP,gCA5BXF,IAAMC,SAASC,QAAU,yB,IAkCnBC,E,4MACJC,MAAQ,CACNC,GAAI,GACJC,IAAK,I,EAGPC,aAAe,SAACC,GACd,EAAKC,SAAL,eACGD,EAAEE,OAAOC,KAAOH,EAAEE,OAAOE,S,EAG9BC,aAAe,SAACL,GACdA,EAAEM,iBACF,EAAKjB,MAAMkB,SAAS,EAAKX,OACtBY,MAAK,SAAAC,GACyB,MAAzB,EAAKA,SAASC,QAChB,EAAKT,SAAS,CACZJ,GAAI,GACJC,IAAK,QAIVa,OAAM,SAAAC,GACLC,QAAQC,IAAI,EAAKF,W,uDAKrB,OACE,uBAAMG,SAAUC,KAAKX,aAArB,UACE,uBAAOY,YAAY,KAAKb,MAAOY,KAAKpB,MAAMC,GAAIqB,SAAUF,KAAKjB,aAAcI,KAAK,OAChF,uBAAOc,YAAY,MAAMb,MAAOY,KAAKpB,MAAME,IAAKoB,SAAUF,KAAKjB,aAAcI,KAAK,QAClF,uBAAOgB,KAAK,SAASf,MAAM,wB,GAhCZgB,aAsCRC,EAtEf,WAAgB,IAAD,EACKC,YAAW,CAAC,YAAvBC,EADM,oBAYb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAAC,EAAD,CAAUpB,SAThB,SAAuBqB,GAErB,OADAf,QAAQC,IAAIc,GACLpC,IAAMqC,KAAN,iBAAqBD,EAAK/B,IAAM,CAAC,IAAO+B,EAAK9B,KAAM,CAACgC,iBAAiB,OAQxE,cAAC1C,EAAD,CAAYE,gBAbWyC,IAApBR,EAAQS,gBCCJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,EAAgBpB,QAAQC,O","file":"static/js/main.123988ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useCookies } from 'react-cookie';\nimport { Component } from 'react';\nimport axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:28081';\n\nfunction App() {\n  const [cookies] = useCookies([\"session\"]);\n\n  function hasSession() {\n    return cookies.session !== undefined;\n  }\n\n  function createNewLink(data) {\n    console.log(data);\n    return axios.post(`/links/${data.id}`, {\"url\": data.url}, {withCredentials: true})\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <LinkFrom onCreate={createNewLink} />\n        <SignButton hasSession={hasSession()} />\n      </header>\n    </div>\n  );\n}\n\nfunction SignButton(props) {\n  const hasSession = props.hasSession;\n  if (!hasSession) {\n    return <a href={`${axios.defaults.baseURL}/auth/signin`}>로그인</a>\n  } else {\n    return <a href={`${axios.defaults.baseURL}/auth/signin`}>로그아웃</a>\n  }\n}\n\nclass LinkFrom extends Component {\n  state = {\n    id: '',\n    url: ''\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.onCreate(this.state)\n      .then(response => {\n        if (this.response.status === 200) {\n          this.setState({\n            id: '',\n            url: ''\n          })\n        }\n      })\n      .catch(error => {\n        console.log(this.error);\n      });\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input placeholder=\"ID\" value={this.state.id} onChange={this.handleChange} name=\"id\" />\n        <input placeholder=\"URL\" value={this.state.url} onChange={this.handleChange} name=\"url\" />\n        <input type=\"submit\" value=\"등록\" />\n      </form>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}